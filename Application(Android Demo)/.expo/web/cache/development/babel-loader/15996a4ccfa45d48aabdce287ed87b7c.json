{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\SeenKTN\\\\Desktop\\\\Application\\\\src\\\\Status.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Constants from \"expo-constants\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nvar statusHeight = Platform.OS === \"ios\" ? Constants.statusBarHeight : 0;\n\nvar handler = function handler(status) {\n  console.log(\"Network status changed\", status);\n};\n\nvar subscription = NetInfo.addEventListener(handler);\n\nvar Status = function (_React$Component) {\n  _inherits(Status, _React$Component);\n\n  var _super = _createSuper(Status);\n\n  function Status() {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isConnected: true\n    };\n\n    _this.componentWillUnmount = function () {\n      _this.subscription();\n    };\n\n    _this.handleChange = function (_ref) {\n      var isConnected = _ref.isConnected;\n\n      _this.setState({\n        isConnected: isConnected\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$NetInfo$fetch, isConnected;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.subscription = NetInfo.addEventListener(this.handleChange);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(NetInfo.fetch());\n\n            case 3:\n              _await$NetInfo$fetch = _context.sent;\n              isConnected = _await$NetInfo$fetch.isConnected;\n              this.setState({\n                isConnected: isConnected\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isConnected = this.state.isConnected;\n      var backgroundColor = isConnected ? \"white\" : \"red\";\n      var statusBar = React.createElement(StatusBar, {\n        backgroundColor: backgroundColor,\n        barStyle: isConnected ? \"dark-content\" : \"light-content\",\n        animated: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      });\n      var messageContainer = React.createElement(View, {\n        style: styles.messageContainer,\n        pointerEvents: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, statusBar, !isConnected && React.createElement(View, {\n        style: styles.bubble,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, \"No network connected\")));\n\n      if (Platform.OS === \"ios\") {\n        return React.createElement(View, {\n          style: [styles.status],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }\n        }, messageContainer);\n      }\n\n      return null;\n    }\n  }]);\n\n  return Status;\n}(React.Component);\n\nexport { Status as default };\nvar styles = StyleSheet.create({\n  status: {\n    zIndex: 1\n  },\n  messageContainer: {\n    zIndex: 1,\n    position: \"absolute\",\n    right: 0,\n    left: 0,\n    height: 80,\n    alignItems: \"center\"\n  },\n  bubble: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 20,\n    backgroundColor: \"red\"\n  },\n  text: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/SeenKTN/Desktop/Application/src/Status.js"],"names":["Constants","NetInfo","React","statusHeight","Platform","OS","statusBarHeight","handler","status","console","log","subscription","addEventListener","Status","state","isConnected","componentWillUnmount","handleChange","setState","fetch","backgroundColor","statusBar","messageContainer","styles","bubble","text","Component","StyleSheet","create","zIndex","position","right","left","height","alignItems","paddingHorizontal","paddingVertical","borderRadius","color"],"mappings":"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","sourcesContent":["import Constants from \"expo-constants\";\r\nimport { StyleSheet, Platform, View, StatusBar, Text } from \"react-native\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport React from \"react\";\r\n\r\nconst statusHeight = Platform.OS === \"ios\" ? Constants.statusBarHeight : 0;\r\nconst handler = (status) => {\r\n  console.log(\"Network status changed\", status);\r\n};\r\nconst subscription = NetInfo.addEventListener(handler);\r\nexport default class Status extends React.Component {\r\n  state = {\r\n    isConnected: true,\r\n  };\r\n  async componentDidMount() {\r\n    this.subscription = NetInfo.addEventListener(this.handleChange);\r\n    const { isConnected } = await NetInfo.fetch();\r\n    this.setState({ isConnected });\r\n  }\r\n  componentWillUnmount = () => {\r\n    this.subscription();\r\n  };\r\n\r\n  handleChange = ({ isConnected }) => {\r\n    this.setState({ isConnected });\r\n  };\r\n  render() {\r\n    const { isConnected } = this.state;\r\n    const backgroundColor = isConnected ? \"white\" : \"red\";\r\n    const statusBar = (\r\n      <StatusBar\r\n        backgroundColor={backgroundColor}\r\n        barStyle={isConnected ? \"dark-content\" : \"light-content\"}\r\n        animated={false}\r\n      />\r\n    );\r\n    const messageContainer = (\r\n      <View style={styles.messageContainer} pointerEvents={\"none\"}>\r\n        {statusBar}\r\n        {!isConnected && (\r\n          <View style={styles.bubble}>\r\n            <Text style={styles.text}>No network connected</Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n    if (Platform.OS === \"ios\") {\r\n      return <View style={[styles.status]}>{messageContainer}</View>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  status: {\r\n    zIndex: 1,\r\n    // height: statusHeight,\r\n  },\r\n  messageContainer: {\r\n    zIndex: 1,\r\n    position: \"absolute\",\r\n    //top: statusHeight + 20,\r\n    right: 0,\r\n    left: 0,\r\n    height: 80,\r\n    alignItems: \"center\",\r\n  },\r\n  bubble: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: \"red\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}